---
import Button from "./Button.astro";
import ProductCard from "./ProductCard.astro";

const url = "https://awccwteuyfoulnztrlsc.supabase.co/rest/v1/produkter?";
const apikey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF3Y2N3dGV1eWZvdWxuenRybHNjIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODQyMzUzNzAsImV4cCI6MTk5OTgxMTM3MH0.j55yJxX0YRq2JVBAyJGzGEdMi5qoOAeM0vZNgy-y7nE"

const options = {
    headers: {
        apikey: apikey
    }
}

// Fetch data from the URL and store the response
const response = await fetch(url, options);

// Convert response data to JSON format
const data = await response.json();

// Destructuring assignment to extract properties from Astro.props
const { titel, beskrivelse, type, genre, serie, forfatter } = Astro.props;

// Filter the fetched data based on multiple conditions
let filteredData = data.filter((product) => {
    // If 'type' and 'genre' exist, return products that match both
    if (type && genre) {
        return product.type === type && product.genre === genre;
    // If only 'type' exists, return products that match 'type'
    } else if (type) {
        return product.type === type;
    // If only 'genre' exists, return products that match 'genre'
    } else if (genre) {
        return product.genre === genre;
    // If 'serie' exists, return products that match 'serie'
    } else if (serie) {
        return product.serie === serie;
    // If 'forfatter' exists, return products that match 'forfatter'
    } else if (forfatter) {
        return product.forfatter === forfatter;
    // If none of the above conditions are met, return the product as is
    } else {
        return product;
    }
});

// Sort the filtered data. If 'serie' exists for both products, sort by 'serie'. 
// If 'serie' is null for one product, sort that product to the end. 
// If 'serie' is null for both products, sort by 'nr'.
filteredData.sort((a, b) => {
  // If both products have a 'serie', sort by 'serie', and if they're the same, by 'nr'
  if (a.serie && b.serie) { 
    return a.serie.localeCompare(b.serie) || a.nr - b.nr; 
  // If 'a' doesn't have a 'serie' but 'b' does, sort 'a' to the end
  } else if (!a.serie && b.serie) {
    return 1;
  // If 'b' doesn't have a 'serie' but 'a' does, sort 'b' to the end
  } else if (a.serie && !b.serie) {
    return -1;
  // If neither product has a 'serie', sort by 'nr'
  } else {
    return a.nr - b.nr; 
  }
});





---
<section>
    <div class="product_grid">
        <div class="text">
            <h1>{titel}</h1>
            <p>{beskrivelse}</p>
        </div>
            <div class="flex">
                {
                    filteredData.map((product) => {
                        return <ProductCard 
                            titel={product.titel}
                            forfatter={product.forfatter}
                            img={product.img}
                            pris={product.pris}
                            type={product.type}
                            format={product.format}
                            sprog={product.sprog}
                            genre={product.genre}
                            serie={product.serie}
                            nr={product.nr}
                        />
                    })
                }
        </div>
    </div>
</section>

<style>
    section {
        padding-inline: 2rem;
        margin: 0 auto;
        max-width: 1100px;
        margin-bottom: 3rem;
    }

    .flex {
        display: flex;
        flex-wrap: wrap;
        justify-content: flex-start;
        gap: 1rem;
    }

    @media screen and (max-width: 1200px) {

        section {
            padding-inline: 2rem;
        }
        .flex {
            justify-content: flex-start;
        }
    }

    /* max width medium phone */
    @media screen and (max-width: 768px) {
        section {
            padding-inline: 0.2rem;
        }
        .flex {
            justify-content: center;
        }
    }
    
    /* max width small phone */
    @media screen and (max-width: 480px) {
        section {
            padding-inline: 0rem;
        }
        .flex {
            justify-content: center;
        }
    }
</style>