---
import Filter from "../components/Filter.astro";
import ProductGrid from "../components/ProductGrid.astro";
import Indhold from "../layouts/Indhold.astro";
import MainLayout from "../layouts/MainLayout.astro";

export async function getStaticPaths() {
    const url = "https://awccwteuyfoulnztrlsc.supabase.co/rest/v1/produkter?select=serie";
    const apikey = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF3Y2N3dGV1eWZvdWxuenRybHNjIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODQyMzUzNzAsImV4cCI6MTk5OTgxMTM3MH0.j55yJxX0YRq2JVBAyJGzGEdMi5qoOAeM0vZNgy-y7nE"

    const options = {
        headers: {
            apikey: apikey
        }
    }

    const response = await fetch(url, options);
    const data = await response.json();

    const unikkeSerier = data
        // Map over the 'data' array, returning an object with 'series' for each item.
        .map(item => ({ serie: item.serie }))
        // Filter out any items where 'series' is null or false.
        .filter(item => item.serie)
        // Use the reduce function to eliminate duplicates.
        .reduce((unique, item) => 
            // If the current item (series) already exists in the unique array, return the current unique array...
            unique.some(obj => obj.serie === item.serie) 
            ? unique 
            // ...otherwise, append the new item (series) to the unique array.
            : [...unique, item],
            []
        );

    // Log the result (the array of unique series objects without null values) to the console.

    const paths = unikkeSerier.map((series) => ({
        params: { serie: series.serie },
        props: { series },
    }));

    return paths;

}

const { series } = Astro.props;

---

<MainLayout titel={"Fantask - " + series.serie}>
    <Indhold>
        <div class="head">
            <h2>
                Serie
            </h2>
            <h1>
                {series.serie}
            </h1>
            <Filter />
        </div>

        <ProductGrid serie={series.serie} />


    </Indhold>
</MainLayout>

<style>

    .head {
        padding-inline: 2rem;
        margin: 0 auto;
        max-width: 1100px;
        margin-top: 3rem;
    }
    
    .head h1 {
        margin-bottom: 1rem;
    }

</style>